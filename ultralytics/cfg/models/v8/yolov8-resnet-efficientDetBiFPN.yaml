# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLOv8-cls image classification model with ResNet50 backbone
# Model docs: https://docs.ultralytics.com/models/yolov8
# Task docs: https://docs.ultralytics.com/tasks/classify

nc: 10  # number of classes
scales:
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

backbone:
  - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]]  # P1/2  Index 0
  - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]]  # P2/4  Index 1
  - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]]  # P3/8  Index 2
  - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]]  # P4/16  Index 3
  - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]]  # P5/32  Index 4
  - [-1, 1, SPPF, [1024, 5]]  # P5/32 (SPPF)  Index 5

head:
  # BiFPN Implementation
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 3], 1, BiFPN_Concat2, [1]]  # Merge P4 with upsampled P5  Index 7
  - [-1, 3, C2f, [256]]  # Fuse features  Index 8

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 2], 1, BiFPN_Concat2, [1]]  # Merge P3 with upsampled P4  Index 10
  - [-1, 3, C2f, [256]]  # Fuse features  Index 11

  # Bottom-up pathway
  - [-1, 1, Conv, [256, 3, 2]]  # P3 to P4  Index 12
  - [[-1, 8, 3], 1, BiFPN_Concat3, [1]]  # Merge P4 with downsampled P3  Index 13
  - [-1, 3, C2f, [256]]  # Fuse features  Index 14

  - [-1, 1, Conv, [512, 3, 2]]  # P4 to P5  Index 15
  - [[-1, 5], 1, BiFPN_Concat2, [1]]  # Merge P5 with downsampled P4  Index 16
  - [-1, 3, C2f, [512]]  # Fuse features  Index 17

###### iteration 2 #########
# Second BiFPN Iteration (Refinement)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # Index 18
  - [[-1, 13], 1, BiFPN_Concat2, [1]]  # Merge P4 with upsampled P5  Index 19
  - [-1, 3, C2f, [256]]  # Fuse features  Index 20

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # Index 21
  - [[-1, 10], 1, BiFPN_Concat2, [1]]  # Merge P3 with upsampled P4  Index 22
  - [-1, 3, C2f, [256]]  # Fuse features  Index 23

  # Second Bottom-Up Refinement Pathway (Fixing Omitted Steps)
  - [-1, 1, Conv, [256, 3, 2]]  # P3 to P4  Index 24
  - [[-1, 19, 3], 1, BiFPN_Concat3, [1]]  # Merge P4 with downsampled P3  Index 25
  - [-1, 3, C2f, [256]]  # Fuse features  Index 26

  - [-1, 1, Conv, [512, 3, 2]]  # P4 to P5  Index 27
  - [[-1, 16], 1, BiFPN_Concat2, [1]]  # Merge P5 with downsampled P4  Index 28
  - [-1, 3, C2f, [512]]  # Fuse features  Index 29
  # Detection head
  - [[23, 26, 29], 1, Detect, [nc]]  # Detect from P3, P4, P5

# backbone:
#   - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]]  # P1/2  Index 0
#   - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]]  # P2/4  Index 1
#   - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]]  # P3/8  Index 2
#   - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]]  # P4/16  Index 3
#   - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]]  # P5/32  Index 4
#   - [-1, 1, SPPF, [1024, 5]]  # P5/32 (SPPF)  Index 5

# # BiFPN with WeightedAdd and multiple iterations
# head:
#   # Initial feature scaling
#   - [4, 1, Conv, [256, 1, 1]]  # Reduce P5 to 256  Index 6
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 3], 1, WeightedAdd, [256]]  # Merge P4 with upsampled P5  Index 8
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 9

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 2], 1, WeightedAdd, [256]]  # Merge P3 with upsampled P4  Index 11
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 12

#   # Bottom-up pathway
#   - [-1, 1, Conv, [256, 3, 2]]  # P3 to P4  Index 13
#   - [[-1, 9, 3], 1, WeightedAdd, [256]]  # Merge P4 with downsampled P3  Index 14
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 15

#   - [-1, 1, Conv, [512, 3, 2]]  # P4 to P5  Index 16
#   - [[-1, 6], 1, WeightedAdd, [512]]  # Merge P5 with downsampled P4  Index 17
#   - [-1, 3, C2f, [512, False]]  # Fuse features  Index 18

#   # Repeat BiFPN (iteration 2)
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 14], 1, WeightedAdd, [256]]  # Merge P4 with upsampled P5  Index 19
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 20

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 11], 1, WeightedAdd, [256]]  # Merge P3 with upsampled P4  Index 21
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 22

#   # Detection head
#   - [[18, 21, 24], 1, Detect, [nc]]  # Detect from P3, P4, P5

# functioning and compiling model
# backbone:
#   - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]]  # P1/2  Index 0
#   - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]]  # P2/4  Index 1
#   - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]]  # P3/8  Index 2
#   - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]]  # P4/16  Index 3
#   - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]]  # P5/32  Index 4
#   - [-1, 1, SPPF, [1024, 5]] # P5/32 (SPPF)  Index 5

# # BiFPN (EfficientDet-style)
# head:
#   # First round of top-down pathway
#   - [4, 1, Conv, [256, 1, 1]]  # Reduce P5 to 256  Index 6
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 3], 1, Concat, [1]]  # Merge P4 with upsampled P5  Index 8
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 9

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 2], 1, Concat, [1]]  # Merge P3 with upsampled P4  Index 11
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 12

#   # Bottom-up pathway (cross-scale fusion)
#   - [-1, 1, Conv, [256, 3, 2]]  # P3 to P4  Index 13
#   - [[-1, 9, 3], 1, Concat, [1]]  # Merge P4 with downsampled P3  Index 14
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 15

#   - [-1, 1, Conv, [512, 3, 2]]  # P4 to P5  Index 16
#   - [[-1, 6], 1, Concat, [1]]  # Merge P5 with downsampled P4  Index 17
#   - [-1, 3, C2f, [512, False]]  # Fuse features  Index 18

#   # Second round of top-down fusion
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 14], 1, Concat, [1]]  # Merge P4 with upsampled P5  Index 19
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 20

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 11], 1, Concat, [1]]  # Merge P3 with upsampled P4  Index 21
#   - [-1, 3, C2f, [256, False]]  # Fuse features  Index 22

#   # Detection head
#   - [[18, 21, 24], 1, Detect, [nc]]  # Detect from P3, P4, P5

# backbone:
#   - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]]   # P1/2 -> Index 0
#   - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]]  # P2/4 -> Index 1
#   - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]] # P3/8 -> Index 2
#   - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]] # P4/16 -> Index 3
#   - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]] # P5/32 -> Index 4
#   - [-1, 1, SPPF, [1024, 5]] # P6/64 -> Index 5

# # Head with BiFPN and YOLOv8 Detection Heads
# head:
#   # P3 to P4 path (BiFPN)
#   - [[2, 3], 1, WeightedAdd, []]  # Fuse P3 and P4 (first block) -> Index 6
#   - [-1, 1, Conv, [256, 1, 1]]  # P4/16 -> Index 7
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # Upsample to P3 size -> Index 8
#   - [[8, 2], 1, WeightedAdd, []]  # Fuse with P3 (bidirectional) -> Index 9

#   # P4 to P5 path (BiFPN)
#   - [[3, 4], 1, WeightedAdd, []]  # Fuse P4 and P5 (second block) -> Index 10
#   - [-1, 1, Conv, [512, 3, 2]]  # P5/32 -> Index 11
#   - [[11, 3], 1, WeightedAdd, []]  # Fuse with P4 (bidirectional) -> Index 12

#   # P5 to P6 path (BiFPN)
#   - [[4, 5], 1, WeightedAdd, []]  # Fuse P5 and P6 (third block) -> Index 13
#   - [-1, 1, Conv, [1024, 3, 2]]  # P6/64 -> Index 14
#   - [[14, 4], 1, WeightedAdd, []]  # Fuse with P5 (bidirectional) -> Index 15

#   # P6 to P7 path (BiFPN)
#   - [[5, 14], 1, WeightedAdd, []]  # Fuse P6 and P7 (fourth block) -> Index 16
#   - [-1, 1, Conv, [1024, 3, 2]]  # P7/128 -> Index 17
#   - [[17, 5], 1, WeightedAdd, []]  # Fuse with P6 (bidirectional) -> Index 18

#   # YOLO Detection Head
#   - [[9, 12, 15], 1, C2f, [256, False]] # P3 level -> Index 19
#   - [[12, 15, 18], 1, C2f, [512, False]] # P4 level -> Index 20
#   - [[15, 18, 17], 1, C2f, [1024, False]] # P5 level -> Index 21

#   - [[19, 20, 21], 1, Detect, [nc]] # Detect(P3, P4, P5)

# backbone:
#   - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]]   # P1/2
#   - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]]  # P2/4
#   - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]] # P3/8
#   - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]] # P4/16
#   - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]] # P5/32
#   - [-1, 1, SPPF, [1024, 5]] # P6/64

# # Head with BiFPN and YOLOv8 Detection Heads
# head:
#   # P3 to P4 path (BiFPN)
#   - [[8, 9], 1, WeightedAdd, []]  # Fuse P3 and P4 (first block)
#   - [-1, 1, Conv, [256, 1, 1]]  # P4/16
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 7], 1, WeightedAdd, []]  # Fuse with P3 (bidirectional)

#   # P4 to P5 path (BiFPN)
#   - [[11, 12], 1, WeightedAdd, []]  # Fuse P4 and P5 (second block)
#   - [-1, 1, Conv, [512, 3, 2]]  # P5/32
#   - [[-1, 10], 1, WeightedAdd, []]  # Fuse with P4 (bidirectional)

#   # P5 to P6 path (BiFPN)
#   - [[14, 15], 1, WeightedAdd, []]  # Fuse P5 and P6 (third block)
#   - [-1, 1, Conv, [1024, 3, 2]]  # P6/64
#   - [[-1, 11], 1, WeightedAdd, []]  # Fuse with P5 (bidirectional)

#   # P6 to P7 path (BiFPN)
#   - [[16, 17], 1, WeightedAdd, []]  # Fuse P6 and P7 (fourth block)
#   - [-1, 1, Conv, [1024, 3, 2]]  # P7/128
#   - [[-1, 12], 1, WeightedAdd, []]  # Fuse with P6 (bidirectional)

#   # YOLO Detection Head
#   - [[13, 16, 19], 1, Detect, [nc]]

# # -----------------------------
# # YOLOv8 Backbone
# # -----------------------------
# backbone:
#   - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]]   # P1/2
#   - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]]  # P2/4
#   - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]] # P3/8
#   - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]] # P4/16
#   - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]] # P5/32
#   - [-1, 1, SPPF, [1024, 5]]  # SPPF after P5

# # -----------------------------
# # BiFPN Implementation (Following EfficientDet)
# # -----------------------------
# head:
#   # =====================
#   # Top-Down Pathway
#   # =====================
#   - [-1, 1, Conv, [512, 1, 1]]
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 5], 1, WeightedAdd, [512]]
#   - [-1, 2, C2f, [512, False]]

#   - [-1, 1, Conv, [256, 1, 1]]
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 4], 1, WeightedAdd, [256]]
#   - [-1, 2, C2f, [256, False]]

#   # =====================
#   # Bottom-Up Pathway
#   # =====================
#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 10], 1, WeightedAdd, [512]]
#   - [-1, 2, C2f, [512, False]]

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 6], 1, WeightedAdd, [1024]]
#   - [-1, 2, C2f, [1024, False]]

#   # =====================
#   # Skip Connections (EfficientDet Style)
#   # =====================
#   - [[14, 17], 1, WeightedAdd, [512]]
#   - [-1, 2, C2f, [512, False]]

#   - [[18, 20], 1, WeightedAdd, [1024]]
#   - [-1, 2, C2f, [1024, False]]

#   # Extra Feature Fusion (EfficientDet Style)
#   - [[14, 17, 20], 1, WeightedAdd, [512]]
#   - [-1, 2, C2f, [512, False]]

#   # =====================
#   # Detection Head
#   # =====================
#   - [[15, 18, 21], 1, Detect, [nc]]
